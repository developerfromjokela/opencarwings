"""
Django settings for carwings project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=0dw6tdkwu$(-0v@2nd#q&!snfyd_8_**3dfxe_vqsfx+gq*67'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'daphne',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'mathfilters',
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'rest_framework.authtoken',
    'drf_yasg',
    'channels',
    'crispy_forms',
    'crispy_tailwind',
    'db.DbAppConfig',
    'tculink',
    'api',
    'ui',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'carwings.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'ui.context_processors.load_ver_info',
            ],
            'libraries': {
                'math_filters': 'ui.templatetags.math_filters',
            },
        },
    },
]

WSGI_APPLICATION = 'carwings.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('PSQL_DATABASE', 'mysql-db'),
        'USER': os.environ.get('PSQL_USER', 'mysql-user'),
        'PASSWORD': os.environ.get('PSQL_PASSWORD', 'mysql-password'),
        'HOST': os.environ.get('PSQL_DATABASE_HOST', 'db'),
        'PORT': os.environ.get('PSQL_DATABASE_PORT', 3306)
#        'OPTIONS': {'init_command': 'SET storage_engine=INNODB;'}
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication'
    ],
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    )
}


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Media files
MEDIA_URL = 'data/'
MEDIA_ROOT = BASE_DIR / 'mediafiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOCALE_PATHS = (BASE_DIR / 'i18n',)

SWAGGER_SETTINGS = {
   'SECURITY_DEFINITIONS': {
      'Personal API Key': {
          'description': 'Authorization header should be like this: "Token xxxxxx", where xxxxxx = your API token',
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
      },
      'Bearer': {
          'description': 'JWT Token obtained via /api/token/obtain. '
                         'Authorization header should look like this: "Bearer xxxxxx", '
                         'where where xxxxxx = JWT access token',
          'type': 'apiKey',
          'name': 'Authorization',
          'in': 'header'
      }
   },
    'DEFAULT_INFO': 'carwings.urls.api_info',
}


# Minutes
LEAF_COMMAND_TIMEOUT = 5
AUTH_USER_MODEL = "db.User"
SIGNUP_ENABLED = True
ACTIVATION_SMS_MESSAGE = "NISSAN_EVIT_TELEMATICS_CENTER"

SMS_PROVIDERS = {
    'hologram': ('Hologram SIM (recommended)', 'tculink.sms.hologram.ProviderHologram'),
    '46elks': ('46elks', 'tculink.sms.46elks.Provider46elks'),
    'webhook': ('Webhook', 'tculink.sms.webhook.ProviderWebhook'),
    'ondevice': ('SMS from your device', 'tculink.sms.ondevice.ProviderOnDevice'),
    'smsgateway': ('Use your old smartphone', 'tculink.sms.smsgateway.ProviderSMSGateway'),
    'manual': ('Manual', 'tculink.sms.manual.ProviderManual'),
}

CRISPY_TEMPLATE_PACK = "tailwind"

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = ""
EMAIL_HOST_PASSWORD = ""

ASGI_APPLICATION = "carwings.asgi.application"
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [(os.environ["REDIS_HOST"], os.environ["REDIS_PORT"])],
        },
    },
}

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=31),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=365),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
}

# Path to .cert file (APNS_CERT) or .p8 file (APNS_KEY)
APNS_CERT = None
APNS_KEY = None
APNS_KEY_ID = ""
APNS_TEAM_ID = ""
APNS_BUNDLE_ID = ""
APNS_USE_SANDBOX = False

FCM_SERVICE_FILE = ""
FCM_PROJECT_ID = ""
# Leave empty to disable, the server will try to scrape all location info available, but may fail sometimes
GOOGLE_API_KEY = ""
OPENCHARGEMAP_API_KEY = ""
ITERNIO_API_KEY = ""