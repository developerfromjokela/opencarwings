# Generated by Django 5.1.7 on 2025-03-26 22:41

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EVInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('range_acon', models.IntegerField(blank=True, default=0, null=True)),
                ('range_acoff', models.IntegerField(blank=True, default=0, null=True)),
                ('plugged_in', models.BooleanField(default=False)),
                ('charging', models.BooleanField(default=False)),
                ('ac_status', models.BooleanField(default=False)),
                ('last_updated', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.DecimalField(blank=True, decimal_places=10, default=None, max_digits=20, null=True)),
                ('lon', models.DecimalField(blank=True, decimal_places=10, default=None, max_digits=20, null=True)),
                ('home', models.BooleanField(default=False)),
                ('last_updated', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TCUConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dial_code', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('apn', models.CharField(blank=True, default=None, max_length=48, null=True)),
                ('apn_user', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('apn_password', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('dns1', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('dns2', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('server_url', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('proxy_url', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('connection_type', models.CharField(blank=True, default=None, max_length=3, null=True)),
                ('last_updated', models.DateTimeField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tcu_pass_hash', models.CharField(blank=True, default=None, max_length=12, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vin', models.CharField(max_length=18, unique=True)),
                ('nickname', models.CharField(default='LEAF', max_length=64)),
                ('msn', models.CharField(max_length=15)),
                ('vehicle_code1', models.IntegerField(default=0)),
                ('vehicle_code2', models.IntegerField(default=0)),
                ('vehicle_code3', models.IntegerField(default=0)),
                ('vehicle_code4', models.IntegerField(default=0)),
                ('tcu_model', models.CharField(default=None, max_length=32, null=True)),
                ('tcu_serial', models.CharField(default=None, max_length=32, null=True)),
                ('iccid', models.CharField(default=None, max_length=32, null=True)),
                ('tcu_ver', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('tcu_user', models.CharField(blank=True, default=None, max_length=16, null=True)),
                ('tcu_pass', models.CharField(blank=True, default=None, max_length=16, null=True)),
                ('last_connection', models.DateTimeField(blank=True, default=None, null=True)),
                ('command_id', models.IntegerField(default=-1)),
                ('command_result', models.IntegerField(choices=[(-1, 'Waiting'), (0, 'Success'), (1, 'Error'), (2, 'Timeout'), (3, 'Await response')], default=-1)),
                ('command_requested', models.BooleanField(default=False)),
                ('command_payload', models.JSONField(blank=True, default=None, null=True)),
                ('command_type', models.IntegerField(choices=[(0, 'No command'), (1, 'Charge status'), (2, 'Charge start'), (3, 'A/C on'), (4, 'A/C off'), (5, 'Read configuration')], default=0)),
                ('command_request_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ev_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='db.evinfo')),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='db.locationinfo')),
                ('tcu_configuration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='db.tcuconfiguration')),
            ],
        ),
        migrations.CreateModel(
            name='AlertHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Charge stop'), (2, 'Charge start'), (3, 'Charge cable reminder'), (4, 'A/C on'), (5, 'A/C off'), (6, 'Configuration read'), (7, 'A/C auto off'), (96, 'Charge error'), (97, 'A/C error'), (98, 'Command timeout'), (99, 'Error')])),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('command_id', models.IntegerField(default=None, null=True)),
                ('additional_data', models.TextField(default=None, null=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.car')),
            ],
        ),
    ]
